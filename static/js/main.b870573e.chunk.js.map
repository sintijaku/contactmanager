{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/test/Test.js","components/pages/About.js","components/pages/NotFound.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","Test","title","body","fetch","then","response","json","_this$state","About","NotFound","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","App","context_Provider","basename","process","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b870573e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n      case 'UPDATE_CONTACT':\r\n          return{\r\n              ...state,\r\n              contacts:state.contacts.map(\r\n                  contact=>contact.id===action.payload.id?\r\n                (contact=action.payload):contact)\r\n          };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//context.js holds our application level state\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n      //we create provider that is givin off this value, that holds the state. Here we can chose how much peaces of state we want to put in\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  }; //we create this only because we dont have database\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state; //destructuring\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {\" \"}\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-camera\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                  className=\"fas fa-pencil\" \r\n                  style={{cursor:'pointer',\r\n                  float:'right',\r\n                  marginRight:'1rem'\r\n                }}></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context'\r\n\r\n class Contacts extends Component {\r\n//any component we want to use the context with we bring in the consumer\r\n\r\n    render() {\r\nreturn (\r\n    <Consumer>\r\n        {/* we return Consumer tag which gives us value that contains anything we passed in it*/}\r\n        {value=>{\r\n            const {contacts}=value; //use destructuring (pull out Contacts from Contacts state)\r\n            return(    <React.Fragment>\r\n                {/* we want to return component */}\r\n                <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact List</span></h1>\r\n                {contacts.map(contact=>\r\n                    (<Contact key={contact.id} \r\n                        contact={contact} />)\r\n                )}\r\n            </React.Fragment> );\r\n        }}\r\n    </Consumer>\r\n);\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n          <a href=\"/\" className=\"navbar-brand\">\r\n            {branding}\r\n          </a>\r\n          <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/contact/add\" className=\"nav-link\">\r\n                  Add\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/about\" className=\"nav-link\">\r\n                  About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = { branding: PropTypes.string.isRequired };\r\n\r\nHeader.defaultProps = { branding: \"MyAopp\" };\r\nconst headingStyle = {\r\n  color: \"red\",\r\n  fontSize: \"20px\"\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n  render(){\r\n      const {title, body}=this.state;\r\n      return(\r\n          <div>\r\n              <h1>{title}</h1>\r\n              <p>{body}</p>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport default ()=> {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">404 Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg',{'is-invalid':error})}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error &&<div className=\"invalid-feedback\">{error}</div>\r\n    }\r\n      </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error:PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = { type: \"text\" };\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport uuid from \"uuid\";\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    //create state\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for errors (validation)\r\n    if (name === '') {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return; //we are setting the state but this will stop it\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n    return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n    return;\r\n    }\r\n\r\n    const newContact = {\r\n    //   id: uuid(), //this generates new, unique id\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res=await axios\r\n    .post('https://jsonplaceholder.typicode.com/users', newContact)\r\n    dispatch({ type: \"ADD_CONTACT\", \r\n    payload: res.data })\r\n\r\n    //cleares state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/'); //redirecting to main page after contact is added\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                {/* creating form */}\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-black\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    //create state\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for errors (validation)\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return; //we are setting the state but this will stop it\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\nconst updContact={\r\n    name, email, phone\r\n}\r\n    const {id}=this.props.match.params;\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n    dispatch({type:'UPDATE_CONTACT',payload:res.data});\r\n\r\n    //cleares state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\"); //redirecting to main page after contact is added\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                {/* creating form */}\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Edit Contact\"\r\n                    className=\"btn btn-light btn-black\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport Test from './components/test/Test';\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        {/* <Router> */}\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n              <Route exact path='/test' component={Test}/>\n              <Route component={NotFound}/>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n      //our main application is wraped in Provider so that we have access to it\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}